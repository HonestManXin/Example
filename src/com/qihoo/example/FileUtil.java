package com.qihoo.example;import java.io.File;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException;import java.util.ArrayList;import java.util.List;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.util.Log;import com.qihoo.yunpan.sdk.android.http.model.YunFile;public final class FileUtil {	private static final String TAG = "FileUtil";		private static final List<String> supportedFile = new ArrayList<String>();		static {		supportedFile.add(".jpg");		supportedFile.add(".jpeg");		supportedFile.add(".png");		supportedFile.add(".gif");	}		private FileUtil() {	}			public static boolean isPicture(YunFile file) {		String fileName = file.name;		String extension = getFileExtension(fileName);		if(supportedFile.contains(extension)) {			return true;		}		return false;	}		private static String getFileExtension(String fileName) {		int dot = fileName.lastIndexOf(".");		 if (dot != -1) {			 return fileName.substring(dot);		 }		 return null;	}		//获取文件的除去路径的短名称	public static String getFileShortName(String fullPath) {		int index = fullPath.lastIndexOf(File.separator);		if (index == -1) {			return fullPath;		}		return fullPath.substring(index);	}		public static boolean saveBitmapToCache(String path, String name, Bitmap bitmap) {		String absolutPath  = path + File.separator + name;		System.out.println(absolutPath);		File f = new File(absolutPath);		try {			FileOutputStream out = new FileOutputStream(f);			bitmap.compress(Bitmap.CompressFormat.PNG, 100, out);			out.flush();			out.close();		} catch (FileNotFoundException e) {			e.printStackTrace();			Log.e(TAG, e.getMessage());			return false;		} catch (IOException e) {			e.printStackTrace();			Log.e(TAG, e.getMessage());			return false;		}				return true;	}		public static Bitmap loadBitmapFromCache(String path, String name) {		return BitmapFactory.decodeFile(path + File.separator + name);	}	}